install.packages('spocc')
library(gdmEngine)
source('Z:/users/bitbucket/gdm_workflow/build_script.R')
install.packages('devtools')
source('Z:/users/bitbucket/gdm_workflow/build_script.R')
install.packages('roxygen2')
source('Z:/users/bitbucket/gdm_workflow/build_script.R')
library(gdmEngine)
get_latest()
library(gdmEngine)
gdmengine = 'Z:/users/bitbucket/gdm_workflow/gdmEngine\R')
gdmengine = 'Z:/users/bitbucket/gdm_workflow/gdmEngine/R')
gdmengine_files = list.files('Z:/users/bitbucket/gdm_workflow/gdmEngine/R',
pattern = '.R$', full.names = TRUE)
gdmengine_files = list.files('Z:/users/bitbucket/gdm_workflow/gdmEngine/R',
pattern = '.R$', full.names = TRUE)
gdmengine_files
for (file in gdmengine_files) source(file)
?download_taxalist
bird_spp = read.delim(
paste0(root, 'birds/BWL-BirdLife_Australia_Working_List_v2.1.csv'))
root = 'R:/SOURCE/biol/'
bird_spp = read.delim(
paste0(root, 'birds/BWL-BirdLife_Australia_Working_List_v2.1.csv'))
dim(bird_spp  )
head(bird_spp)
bird_spp = read.delim(
paste0(root, 'birds/BWL-BirdLife_Australia_Working_List_v2.1.csv',
sep = ','))
bird_spp = read.delim(
paste0(root, 'birds/BWL-BirdLife_Australia_Working_List_v2.1.csv'),
sep = ',')
dim(bird_spp)
head(bird_spp)
## subset this to include only those listed at the species level
## (i.e. the col name 'Taxon.Level' == 'sp')
bird_spp = bird_spp[bird_spp$Taxon.Level == 'sp', ]
dim(bird_spp)
names(bird_spp)
bird_spp = as.character(paste(bird_spp$Taxon.scientific.name))
## set up call
dst = paste0(root, 'from_ala')
if(!dir.exists(dst)) dir.create(dst)
dst
## set up call
dst = paste0(root, 'birds/from_ala')
if(!dir.exists(dst)) dir.create(dst)
library(parallel)
download_taxalist(bird_spp, dst = dst, parallel = TRUE, background = TRUE)
download_taxalist
## fails in silent mode - look into...
## download_taxalist(bird_spp, dst = dst, parallel = TRUE, background = TRUE)
download_taxalist(bird_spp, dst = dst, parallel = TRUE, background = FALSE)
update_build()
## source
## ----------------------------------------------------------------------------
install.packages('Rtools')
install.packages('installr')
library(installr)
install.Rtools()
update_build()
pkg = c('betapart', 'gdm', 'nnls', 'matrixStats', 'spatstat')
lapply(pkg, install.packages)
update_build = function(){
pkg_root = '//ces-10-cdc/OSM_CDC_MMRG_work/users/bitbucket/gdm_workflow/gdmEngine'
## write DESCRIPTION file
DESCRIPTION = c('Package: gdmEngine',
'Version: 0.01',
paste('Date:', Sys.Date()),
'Title: Workflow for GDM',
'Description: Functions used to develop GDMs',
paste('Author:', unname(Sys.info()['user'])),
'Maintainer: Chris Ware <chris.ware@csiro.au>',
'SystemRequirements: git with shell distribution',
#paste('Authors@R:', unname(Sys.info()['user']))
'Imports: Rcpp (>= 0.11.4)',
'LinkingTo: Rcpp'
)
sink(paste(pkg_root, 'DESCRIPTION', sep = '/'))
cat(DESCRIPTION, sep = '\n')
sink()
## Build with devtools
setwd(pkg_root)
document()
build()
install()
}
update_build()
update_build()
library(gdmEngine)
?download_taxalist
## fails in silent mode - look into...
download_taxalist(bird_spp, dst = dst, parallel = TRUE, background = TRUE)
## fails in silent mode - look into...
## download_taxalist(bird_spp, dst = dst, parallel = TRUE, background = TRUE)
download_taxalist(bird_spp, dst = dst, parallel = TRUE, background = FALSE)
