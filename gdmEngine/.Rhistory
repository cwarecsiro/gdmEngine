geom_boxplot() + theme(axis.title.y="Mdn.Geo.Dist")
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
p1<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.geowt, y=Dissimilarity.Evenness, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.geowt, y=Mdn.Dissimilarity, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.geowt, y=Sitepairs.Geo.Evenness, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.geowt, y=Sitepairs.Env.Evenness, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.geowt, y=Mdn.Sitepairs.EnvDistance, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.geowt, y=Mdn.Sitepairs.GeoDistance, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Mdn.Geo.Dist")
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
png(paste0(figures.out.folder,"/p_bandwidth_geowt.png"),height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
p1<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.skip, y=Dissimilarity.Evenness, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.skip, y=Mdn.Dissimilarity, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.skip, y=Sitepairs.Geo.Evenness, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.skip, y=Sitepairs.Env.Evenness, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.skip, y=Mdn.Sitepairs.EnvDistance, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.skip, y=Mdn.Sitepairs.GeoDistance, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Mdn.Geo.Dist")
png(paste0(figures.out.folder,"/p_bandwidth_skip.png"),height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
p1<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.DistFact, y=Dissimilarity.Evenness, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.DistFact, y=Mdn.Dissimilarity, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.DistFact, y=Sitepairs.Geo.Evenness, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.DistFact, y=Sitepairs.Env.Evenness, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.DistFact, y=Mdn.Sitepairs.EnvDistance, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.DistFact, y=Mdn.Sitepairs.GeoDistance, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Mdn.Geo.Dist")
png(paste0(figures.out.folder,"/p_bandwidth_distFact.png"),height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
p1<-ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=Dissimilarity.Evenness, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=Mdn.Dissimilarity, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=Sitepairs.Geo.Evenness, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=Sitepairs.Env.Evenness, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=Mdn.Sitepairs.EnvDistance, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=Mdn.Sitepairs.GeoDistance, fill=p.n.pairs.per.site)) +
geom_boxplot() + labs(y = "Mdn.Geo.Dist")
png(paste0(figures.out.folder,"/p_bandwidth_randProp.png"),height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() +  theme(axis.text.y=element_blank(), axis.title.y=element_blank())
ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() #+  theme(axis.text.y=element_blank(), axis.title.y=element_blank())
ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + xlim(0, 10000)
ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + scale_x_continuous(limits = c(0, 10000))
ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + ylim(0, 10000)
# RUNTIME
p1<-ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + ylim(0, 10000) +  theme(legend.position="none")
p2<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.skip, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + ylim(0, 10000) +  theme(axis.text.y=element_blank(), axis.title.y=element_blank(), legend.position="none")
p3<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.DistFact, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + ylim(0, 10000) +  theme(axis.text.y=element_blank(), axis.title.y=element_blank(), legend.position="none")
p4<-ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + ylim(0, 10000) +  theme(axis.text.y=element_blank(), axis.title.y=element_blank())
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
multiplot(p1, p2, p3, p4, cols=4)
p1<-ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + ylim(0, 10000) +  theme(legend.position="none")
p2<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.skip, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + ylim(0, 10000) +  theme(axis.text.y=element_blank(), axis.title.y=element_blank(), legend.position="none")
p3<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.DistFact, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + ylim(0, 10000) +  theme(axis.text.y=element_blank(), axis.title.y=element_blank(), legend.position="none")
p4<-ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + ylim(0, 10000) +  theme(axis.text.y=element_blank(), axis.title.y=element_blank(), legend.position="none")
png(paste0(figures.out.folder,"/p_bandwidth_ProcTime.png"),height=500,width=1000)
multiplot(p1, p2, p3, p4, cols=4)
dev.off()#___
p1<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.geowt, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + ylim(0, 10000) +  theme(legend.position="none")
p2<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.skip, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + ylim(0, 10000) +  theme(axis.text.y=element_blank(), axis.title.y=element_blank(), legend.position="none")
p3<-ggplot(parameter.results.tbl, aes(x=p.bandwidth.DistFact, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + ylim(0, 10000) +  theme(axis.text.y=element_blank(), axis.title.y=element_blank(), legend.position="none")
p4<-ggplot(parameter.results.tbl, aes(x=p.geowt.RndProp, y=ProcTime, fill=p.n.pairs.per.site)) +
geom_boxplot() + ylim(0, 10000) +  theme(axis.text.y=element_blank(), axis.title.y=element_blank(), legend.position="none")
png(paste0(figures.out.folder,"/p_bandwidth_ProcTime.png"),height=500,width=1000)
multiplot(p1, p2, p3, p4, cols=4)
dev.off()#___
this.sample <- sitepair_sample_assessor(site.env.data=Site.Env.Data,
composition.data=Selected.records,
n.pairs.per.site = 10,
n.crossvalid.tests = 10,
sample.method = 'random',
b.used.factor=2,
#b.dpair.factor=0.5,
#b.epair.factor=1,
#sigma.spair=NULL,
#spair.factor=1,
domain.mask=Aus.domain.mask,
pcs.projargs="+init=epsg:3577",
#bandwidth.geowt=NULL,
#bandwidth.skip=NULL,
#bandwidth.DistFact=NULL,
#geowt.RndProp=NULL,
output.folder = NULL,
output.name = "Sitepair_sample_assessor_output_rand1")
this.sample$DissimilaritySummary
mean(this.sample$DissimilaritySummary[,3])
mean(this.sample$DissimilarityEvenness)
mean(this.sample$EnvEvenness)
mean(this.sample$SitepairsEnvEvenness)
mean(this.sample$SitepairsGeoEvenness)
mean(this.sample$SitepairsGeoDistanceSummary[,3])
rand.sample<-this.sample
geowt.sample <- sitepair_sample_assessor(site.env.data=Site.Env.Data,
composition.data=Selected.records,
n.pairs.per.site = 10,
n.crossvalid.tests = 10,
sample.method = 'geowt',
#b.used.factor=2,
#b.dpair.factor=0.5,
#b.epair.factor=1,
#sigma.spair=NULL,
#spair.factor=1,
domain.mask=Aus.domain.mask,
pcs.projargs="+init=epsg:3577",
bandwidth.geowt=150000,
bandwidth.skip=2,
bandwidth.DistFact=1,
geowt.RndProp=0.05,
output.folder = "//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/amphibians/SitePairSampleAssessment",
output.name = "Sitepair_sample_assessor_output_geowt1")
geowt.sample$DissimilarityEvenness
geowt.sample$DissimilaritySummary
rand.sample$DissimilaritySummary
boxplot(c(0,0.5,0.66666,0.8461,1))
parameter.tbl <- expand.grid(p.sample.method='random',
p.n.pairs.per.site=c(5,10,20),
p.b.used.factor=c(0.1,0.5,1,2,3,4,5),
stringsAsFactors=FALSE)
parameter.tbl<-unique(parameter.tbl)
parameter.tbl$run.name<-paste0("Amphibian_",parameter.tbl$p.sample.method,"_",c(1:nrow(parameter.tbl))) ## **CHANGE FOR EACH TAXA**
analysis.out.folder<-"//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/amphibians/SitePairSampleAssessment/random"  ## **CHANGE FOR EACH TAXA**
write.csv(parameter.tbl,paste0(analysis.out.folder,"/Amphibian_parameters_random.csv"),row.names = FALSE) ## **CHANGE FOR EACH TAXA**
library(gdmEngine)
library(foreach)
library(doParallel)
cl<-makeCluster(12) #setup parallel backend to use 12 processors
registerDoParallel(cl)
foreach(i.run=1:nrow(parameter.tbl), .packages='gdmEngine') %dopar% {
this.sample <- sitepair_sample_assessor(site.env.data = Site.Env.Data,
composition.data = Selected.records ,
n.pairs.per.site = parameter.tbl$p.n.pairs.per.site[i.run],
n.crossvalid.tests = 3,
sample.method = parameter.tbl$p.sample.method[i.run],
b.used.factor=parameter.tbl$p.b.used.factor[i.run],
#b.dpair.factor=parameter.tbl$p.b.dpair.factor[i.run],
#b.epair.factor=parameter.tbl$p.b.epair.factor[i.run],
#sigma.spair=parameter.tbl$p.sigma.spair[i.run],
#spair.factor=parameter.tbl$p.b.spair.factor[i.run],
domain.mask=Aus.domain.mask,
pcs.projargs="+init=epsg:3577",
#bandwidth.geowt=parameter.tbl$p.bandwidth.geowt[i.run],
#bandwidth.skip=parameter.tbl$p.bandwidth.skip[i.run],
#bandwidth.DistFact=parameter.tbl$p.bandwidth.DistFact[i.run],
#geowt.RndProp=parameter.tbl$p.geowt.RndProp[i.run],
output.folder = analysis.out.folder,
output.name = parameter.tbl$run.name[i.run])
} # end for i.run
parameter.tbl <- expand.grid(p.sample.method='geodist',
p.n.pairs.per.site=c(5,10,20),
p.b.used.factor=c(0.1,0.5,1,2,3,4,5),
p.b.dpair.factor=c(0.1,0.5,1,2,3,4,5),
stringsAsFactors=FALSE)
parameter.tbl<-unique(parameter.tbl)
parameter.tbl$run.name<-paste0("Amphibian_",parameter.tbl$p.sample.method,"_",c(1:nrow(parameter.tbl))) ## **CHANGE FOR EACH TAXA**
analysis.out.folder<-"//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/amphibians/SitePairSampleAssessment/geodist"  ## **CHANGE FOR EACH TAXA**
write.csv(parameter.tbl,paste0(analysis.out.folder,"/Amphibian_parameters_geodist.csv"),row.names = FALSE) ## **CHANGE FOR EACH TAXA**
cl<-makeCluster(12) #setup parallel backend to use 12 processors
registerDoParallel(cl)
foreach(i.run=1:nrow(parameter.tbl), .packages='gdmEngine') %dopar% {
this.sample <- sitepair_sample_assessor(site.env.data = Site.Env.Data,
composition.data = Selected.records ,
n.pairs.per.site = parameter.tbl$p.n.pairs.per.site[i.run],
n.crossvalid.tests = 3,
sample.method = parameter.tbl$p.sample.method[i.run],
b.used.factor=parameter.tbl$p.b.used.factor[i.run],
b.dpair.factor=parameter.tbl$p.b.dpair.factor[i.run],
#b.epair.factor=parameter.tbl$p.b.epair.factor[i.run],
#sigma.spair=parameter.tbl$p.sigma.spair[i.run],
#spair.factor=parameter.tbl$p.b.spair.factor[i.run],
domain.mask=Aus.domain.mask,
pcs.projargs="+init=epsg:3577",
#bandwidth.geowt=parameter.tbl$p.bandwidth.geowt[i.run],
#bandwidth.skip=parameter.tbl$p.bandwidth.skip[i.run],
#bandwidth.DistFact=parameter.tbl$p.bandwidth.DistFact[i.run],
#geowt.RndProp=parameter.tbl$p.geowt.RndProp[i.run],
output.folder = analysis.out.folder,
output.name = parameter.tbl$run.name[i.run])
} # end for i.run
stopCluster(cl)
#### PARAMETERS FOR ENVDIST ####
parameter.tbl <- expand.grid(p.sample.method='envdist',
p.n.pairs.per.site=c(5,10,20),
p.b.used.factor=c(0.1,0.5,1,2,3,4,5),
p.b.epair.factor=c(0.1,0.5,1,2,3,4,5),
stringsAsFactors=FALSE)
parameter.tbl<-unique(parameter.tbl)
parameter.tbl$run.name<-paste0("Amphibian_",parameter.tbl$p.sample.method,"_",c(1:nrow(parameter.tbl))) ## **CHANGE FOR EACH TAXA**
analysis.out.folder<-"//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/amphibians/SitePairSampleAssessment/envdist"  ## **CHANGE FOR EACH TAXA**
write.csv(parameter.tbl,paste0(analysis.out.folder,"/Amphibian_parameters_envdist.csv"),row.names = FALSE) ## **CHANGE FOR EACH TAXA**
#parameter.tbl<-read.csv(paste0(analysis.out.folder,"/Amphibian_parameters_envdist.csv")) ## **CHANGE FOR EACH TAXA**
# run the parallel loop over parameter combinations
cl<-makeCluster(12) #setup parallel backend to use 12 processors
registerDoParallel(cl)
foreach(i.run=1:nrow(parameter.tbl), .packages='gdmEngine') %dopar% {
this.sample <- sitepair_sample_assessor(site.env.data = Site.Env.Data,
composition.data = Selected.records ,
n.pairs.per.site = parameter.tbl$p.n.pairs.per.site[i.run],
n.crossvalid.tests = 3,
sample.method = parameter.tbl$p.sample.method[i.run],
b.used.factor=parameter.tbl$p.b.used.factor[i.run],
#b.dpair.factor=parameter.tbl$p.b.dpair.factor[i.run],
b.epair.factor=parameter.tbl$p.b.epair.factor[i.run],
#sigma.spair=parameter.tbl$p.sigma.spair[i.run],
#spair.factor=parameter.tbl$p.b.spair.factor[i.run],
domain.mask=Aus.domain.mask,
pcs.projargs="+init=epsg:3577",
#bandwidth.geowt=parameter.tbl$p.bandwidth.geowt[i.run],
#bandwidth.skip=parameter.tbl$p.bandwidth.skip[i.run],
#bandwidth.DistFact=parameter.tbl$p.bandwidth.DistFact[i.run],
#geowt.RndProp=parameter.tbl$p.geowt.RndProp[i.run],
output.folder = analysis.out.folder,
output.name = parameter.tbl$run.name[i.run])
} # end for i.run
stopCluster(cl)
library(devtools)
library(roxygen2)
library(Rcpp)
pkg_root = '//ces-10-cdc/OSM_CDC_MMRG_work/users/bitbucket/gdm_workflow/gdmEngine'
DESCRIPTION = c('Package: gdmEngine',
'Version: 0.01',
paste('Date:', Sys.Date()),
'Title: Workflow for GDM',
'Description: Functions used to develop GDMs',
paste('Author:', unname(Sys.info()['user'])),
'Maintainer: Chris Ware <chris.ware@csiro.au>',
'SystemRequirements: git with shell distribution',
'Licence: errr',
#paste('Authors@R:', unname(Sys.info()['user']))
'Imports: Rcpp (>= 0.11.4)',
'LinkingTo: Rcpp'
)
sink(paste(pkg_root, 'DESCRIPTION', sep = '/'))
cat(DESCRIPTION, sep = '\n')
sink()
## Build with devtools
setwd(pkg_root)
document()
build()
document()
build()
build()
build()
Rcpp::compileAttributes()
build()
build()
build()
build()
build()
parameter.tbl <- expand.grid(p.sample.method='geodens',
p.n.pairs.per.site=c(5,10,20),
p.b.used.factor=c(0.1,0.5,1,2,3,4,5),
p.sigma.spair=c(0.1,0.25,0.5,1.0,1.25,1.5,2),
p.b.spair.factor=c(0.1,0.5,1,2,3,4,5),
stringsAsFactors=FALSE)
parameter.tbl<-unique(parameter.tbl)
parameter.tbl$run.name<-paste0("Amphibian_",parameter.tbl$p.sample.method,"_",c(1:nrow(parameter.tbl))) ## **CHANGE FOR EACH TAXA**
analysis.out.folder<-"//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/amphibians/SitePairSampleAssessment/geodens"  ## **CHANGE FOR EACH TAXA**
write.csv(parameter.tbl,paste0(analysis.out.folder,"/Amphibian_parameters_geodens.csv"),row.names = FALSE) ## **CHANGE FOR EACH TAXA**
parameter.tbl <- expand.grid(p.sample.method='geodens',
p.n.pairs.per.site=c(5,10,20),
p.b.used.factor=c(0.1,0.5,1,2,3,4,5),
p.sigma.spair=c(0.25,0.5,1.0,1.25,1.5,2),
p.b.spair.factor=c(0.25,0.5,1,2,4),
stringsAsFactors=FALSE)
parameter.tbl<-unique(parameter.tbl)
parameter.tbl$run.name<-paste0("Amphibian_",parameter.tbl$p.sample.method,"_",c(1:nrow(parameter.tbl))) ## **CHANGE FOR EACH TAXA**
analysis.out.folder<-"//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/amphibians/SitePairSampleAssessment/geodens"  ## **CHANGE FOR EACH TAXA**
write.csv(parameter.tbl,paste0(analysis.out.folder,"/Amphibian_parameters_geodens.csv"),row.names = FALSE) ## **CHANGE FOR EACH TAXA**
parameter.tbl <- expand.grid(p.sample.method='geodens',
p.n.pairs.per.site=c(5,10,20),
p.b.used.factor=c(0.1,0.5,1,2,3,4,5),
p.sigma.spair=c(0.25,0.5,1.0,1.5,2),
p.b.spair.factor=c(0.25,0.5,1,2,4),
stringsAsFactors=FALSE)
parameter.tbl<-unique(parameter.tbl)
parameter.tbl$run.name<-paste0("Amphibian_",parameter.tbl$p.sample.method,"_",c(1:nrow(parameter.tbl))) ## **CHANGE FOR EACH TAXA**
analysis.out.folder<-"//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/amphibians/SitePairSampleAssessment/geodens"  ## **CHANGE FOR EACH TAXA**
write.csv(parameter.tbl,paste0(analysis.out.folder,"/Amphibian_parameters_geodens.csv"),row.names = FALSE) ## **CHANGE FOR EACH TAXA**
cl<-makeCluster(12) #setup parallel backend to use 12 processors
registerDoParallel(cl)
foreach(i.run=1:nrow(parameter.tbl), .packages='gdmEngine') %dopar% {
this.sample <- sitepair_sample_assessor(site.env.data = Site.Env.Data,
composition.data = Selected.records ,
n.pairs.per.site = parameter.tbl$p.n.pairs.per.site[i.run],
n.crossvalid.tests = 3,
sample.method = parameter.tbl$p.sample.method[i.run],
b.used.factor=parameter.tbl$p.b.used.factor[i.run],
#b.dpair.factor=parameter.tbl$p.b.dpair.factor[i.run],
#b.epair.factor=parameter.tbl$p.b.epair.factor[i.run],
sigma.spair=parameter.tbl$p.sigma.spair[i.run],
spair.factor=parameter.tbl$p.b.spair.factor[i.run],
domain.mask=Aus.domain.mask,
pcs.projargs="+init=epsg:3577",
#bandwidth.geowt=parameter.tbl$p.bandwidth.geowt[i.run],
#bandwidth.skip=parameter.tbl$p.bandwidth.skip[i.run],
#bandwidth.DistFact=parameter.tbl$p.bandwidth.DistFact[i.run],
#geowt.RndProp=parameter.tbl$p.geowt.RndProp[i.run],
output.folder = analysis.out.folder,
output.name = parameter.tbl$run.name[i.run])
} # end for i.run
stopCluster(cl)
Selected.records <- read.csv("//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/land_snails/selected_gridcell_composition_2018-03-09.csv")
Site.Env.Data <- read.csv("//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/land_snails/site_env_data_2018-03-09.csv")
species.names.file <- "//osm-23-cdc/OSM_CBR_LW_DEE_work/source/biol/land_snails/AusLandSnails_ALASpeciesList_9Mar18.csv"
species.names <- read.csv(species.names.file)
species.names <- species.names$Species.Name
species.names <- unique(species.names)
species.records.folder <- "//osm-23-cdc/OSM_CBR_LW_DEE_work/source/biol/land_snails"
species.records.folder.raw <- "//osm-23-cdc/OSM_CBR_LW_DEE_work/source/biol/land_snails/raw_files"
data.processing.folder <- "//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/land_snails"
agg.cell.rad <- 2.25
min.rich.limit <- 2
max.rich.limit <- 50
min.rich.rad <- 50
min.rich.proportion <- 0.25
n.pairs.model <- 50000
train.proportion <- 0.8
n.pairs.test <- 10000
parameter.tbl <- expand.grid(p.sample.method='random',
p.n.pairs.per.site=c(5,10,20),
p.b.used.factor=c(0.1,0.5,1,2,3,4,5),
stringsAsFactors=FALSE)
parameter.tbl<-unique(parameter.tbl)
parameter.tbl$run.name<-paste0(taxa,"_",parameter.tbl$p.sample.method,"_",c(1:nrow(parameter.tbl))) ## **CHANGE FOR EACH TAXA**
analysis.out.folder<-paste0("//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/",taxa,"/SitePairSampleAssessment/random")  ## **CHANGE FOR EACH TAXA**
write.csv(parameter.tbl,paste0(analysis.out.folder,"/",taxa,"_parameters_random.csv"),row.names = FALSE) ## **CHANGE FOR EACH TAXA**
# run the parallel loop over parameter combinations
cl<-makeCluster(12) #setup parallel backend to use 12 processors
## NOW RUN THE SITEPAIR SAMPLING ATTRIBUTE ASSESSMENT ------------------------------------##
taxa <- "land_snails"
parameter.tbl <- expand.grid(p.sample.method='random',
p.n.pairs.per.site=c(5,10,20),
p.b.used.factor=c(0.1,0.5,1,2,3,4,5),
stringsAsFactors=FALSE)
parameter.tbl<-unique(parameter.tbl)
parameter.tbl$run.name<-paste0(taxa,"_",parameter.tbl$p.sample.method,"_",c(1:nrow(parameter.tbl))) ## **CHANGE FOR EACH TAXA**
analysis.out.folder<-paste0("//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/",taxa,"/SitePairSampleAssessment/random")  ## **CHANGE FOR EACH TAXA**
write.csv(parameter.tbl,paste0(analysis.out.folder,"/",taxa,"_parameters_random.csv"),row.names = FALSE) ## **CHANGE FOR EACH TAXA**
# run the parallel loop over parameter combinations
cl<-makeCluster(12) #setup parallel backend to use 12 processors
registerDoParallel(cl)
foreach(i.run=1:nrow(parameter.tbl), .packages='gdmEngine') %dopar% {
this.sample <- sitepair_sample_assessor(site.env.data = Site.Env.Data,
composition.data = Selected.records ,
n.pairs.per.site = parameter.tbl$p.n.pairs.per.site[i.run],
n.crossvalid.tests = 3,
sample.method = parameter.tbl$p.sample.method[i.run],
b.used.factor=parameter.tbl$p.b.used.factor[i.run],
domain.mask=Aus.domain.mask,
pcs.projargs="+init=epsg:3577",
output.folder = analysis.out.folder,
output.name = parameter.tbl$run.name[i.run])
} # end for i.run
stopCluster(cl)
parameter.tbl <- expand.grid(p.sample.method='geodist',
p.n.pairs.per.site=c(5,10,20),
p.b.used.factor=c(0.1,0.5,1,2,3,4,5),
p.b.dpair.factor=c(0.1,0.5,1,2,3,4,5),
stringsAsFactors=FALSE)
parameter.tbl<-unique(parameter.tbl)
parameter.tbl$run.name<-paste0(taxa,"_",parameter.tbl$p.sample.method,"_",c(1:nrow(parameter.tbl))) ## **CHANGE FOR EACH TAXA**
analysis.out.folder<-paste0("//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/",taxa,"/SitePairSampleAssessment/",parameter.tbl$p.sample.method)  ## **CHANGE FOR EACH TAXA**
write.csv(parameter.tbl,paste0(analysis.out.folder,"/",taxa,"_parameters_",parameter.tbl$p.sample.method,".csv"),row.names = FALSE) ## **CHANGE FOR EACH TAXA**
# run the parallel loop over parameter combinations
cl<-makeCluster(12) #setup parallel backend to use 12 processors
stopCluster(cl)
paste0(analysis.out.folder,"/",taxa,"_parameters_",parameter.tbl$p.sample.method,".csv")
parameter.tbl$p.sample.method[1]
parameter.tbl <- expand.grid(p.sample.method='geodist',
p.n.pairs.per.site=c(5,10,20),
p.b.used.factor=c(0.1,0.5,1,2,3,4,5),
p.b.dpair.factor=c(0.1,0.5,1,2,3,4,5),
stringsAsFactors=FALSE)
parameter.tbl<-unique(parameter.tbl)
parameter.tbl$run.name<-paste0(taxa,"_",parameter.tbl$p.sample.method,"_",c(1:nrow(parameter.tbl))) ## **CHANGE FOR EACH TAXA**
analysis.out.folder<-paste0("//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/",taxa,"/SitePairSampleAssessment/",parameter.tbl$p.sample.method[1])  ## **CHANGE FOR EACH TAXA**
write.csv(parameter.tbl,paste0(analysis.out.folder,"/",taxa,"_parameters_",parameter.tbl$p.sample.method[1],".csv"),row.names = FALSE) ## **CHANGE FOR EACH TAXA**
# run the parallel loop over parameter combinations
cl<-makeCluster(12) #setup parallel backend to use 12 processors
registerDoParallel(cl)
foreach(i.run=1:nrow(parameter.tbl), .packages='gdmEngine') %dopar% {
this.sample <- sitepair_sample_assessor(site.env.data = Site.Env.Data,
composition.data = Selected.records ,
n.pairs.per.site = parameter.tbl$p.n.pairs.per.site[i.run],
n.crossvalid.tests = 3,
sample.method = parameter.tbl$p.sample.method[i.run],
b.used.factor=parameter.tbl$p.b.used.factor[i.run],
b.dpair.factor=parameter.tbl$p.b.dpair.factor[i.run],
domain.mask=Aus.domain.mask,
pcs.projargs="+init=epsg:3577",
output.folder = analysis.out.folder,
output.name = parameter.tbl$run.name[i.run])
} # end for i.run
stopCluster(cl)
#### PARAMETERS FOR ENVDIST ####
parameter.tbl <- expand.grid(p.sample.method='envdist',
p.n.pairs.per.site=c(5,10,20),
p.b.used.factor=c(0.1,0.5,1,2,3,4,5),
p.b.epair.factor=c(0.1,0.5,1,2,3,4,5),
stringsAsFactors=FALSE)
parameter.tbl<-unique(parameter.tbl)
parameter.tbl$run.name<-paste0(taxa,"_",parameter.tbl$p.sample.method,"_",c(1:nrow(parameter.tbl))) ## **CHANGE FOR EACH TAXA**
analysis.out.folder<-paste0("//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/",taxa,"/SitePairSampleAssessment/",parameter.tbl$p.sample.method[1])  ## **CHANGE FOR EACH TAXA**
write.csv(parameter.tbl,paste0(analysis.out.folder,"/",taxa,"_parameters_",parameter.tbl$p.sample.method[1],".csv"),row.names = FALSE) ## **CHANGE FOR EACH TAXA**
# run the parallel loop over parameter combinations
cl<-makeCluster(12) #setup parallel backend to use 12 processors
registerDoParallel(cl)
foreach(i.run=1:nrow(parameter.tbl), .packages='gdmEngine') %dopar% {
this.sample <- sitepair_sample_assessor(site.env.data = Site.Env.Data,
composition.data = Selected.records ,
n.pairs.per.site = parameter.tbl$p.n.pairs.per.site[i.run],
n.crossvalid.tests = 3,
sample.method = parameter.tbl$p.sample.method[i.run],
b.used.factor=parameter.tbl$p.b.used.factor[i.run],
b.epair.factor=parameter.tbl$p.b.epair.factor[i.run],
domain.mask=Aus.domain.mask,
pcs.projargs="+init=epsg:3577",
output.folder = analysis.out.folder,
output.name = parameter.tbl$run.name[i.run])
} # end for i.run
stopCluster(cl)
parameter.tbl <- expand.grid(p.sample.method='geodens',
p.n.pairs.per.site=c(5,10,20),
p.b.used.factor=c(0.1,0.5,1,2,3,4,5),
p.sigma.spair=c(0.25,0.5,1.0,1.5,2),
p.b.spair.factor=c(0.25,0.5,1,2,4),
stringsAsFactors=FALSE)
parameter.tbl<-unique(parameter.tbl)
parameter.tbl$run.name<-paste0(taxa,"_",parameter.tbl$p.sample.method,"_",c(1:nrow(parameter.tbl))) ## **CHANGE FOR EACH TAXA**
analysis.out.folder<-paste0("//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/",taxa,"/SitePairSampleAssessment/",parameter.tbl$p.sample.method[1])  ## **CHANGE FOR EACH TAXA**
write.csv(parameter.tbl,paste0(analysis.out.folder,"/",taxa,"_parameters_",parameter.tbl$p.sample.method[1],".csv"),row.names = FALSE) ## **CHANGE FOR EACH TAXA**
# run the parallel loop over parameter combinations
cl<-makeCluster(12) #setup parallel backend to use 12 processors
registerDoParallel(cl)
foreach(i.run=1:nrow(parameter.tbl), .packages='gdmEngine') %dopar% {
this.sample <- sitepair_sample_assessor(site.env.data = Site.Env.Data,
composition.data = Selected.records ,
n.pairs.per.site = parameter.tbl$p.n.pairs.per.site[i.run],
n.crossvalid.tests = 3,
sample.method = parameter.tbl$p.sample.method[i.run],
b.used.factor=parameter.tbl$p.b.used.factor[i.run],
sigma.spair=parameter.tbl$p.sigma.spair[i.run],
spair.factor=parameter.tbl$p.b.spair.factor[i.run],
domain.mask=Aus.domain.mask,
pcs.projargs="+init=epsg:3577",
output.folder = analysis.out.folder,
output.name = parameter.tbl$run.name[i.run])
} # end for i.run
stopCluster(cl)
parameter.tbl<-unique(parameter.tbl)
parameter.tbl$run.name<-paste0(taxa,"_",parameter.tbl$p.sample.method,"_",c(1:nrow(parameter.tbl))) ## **CHANGE FOR EACH TAXA**
analysis.out.folder<-paste0("//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/",taxa,"/SitePairSampleAssessment/",parameter.tbl$p.sample.method[1])  ## **CHANGE FOR EACH TAXA**
write.csv(parameter.tbl,paste0(analysis.out.folder,"/",taxa,"_parameters_",parameter.tbl$p.sample.method[1],".csv"),row.names = FALSE) ## **CHANGE FOR EACH TAXA**
cl<-makeCluster(12) #setup parallel backend to use 12 processors
registerDoParallel(cl)
# run the parallel loop over parameter combinations
foreach(i.run=1:nrow(parameter.tbl), .packages='gdmEngine') %dopar% {
this.sample <- sitepair_sample_assessor(site.env.data = Site.Env.Data,
composition.data = Selected.records ,
n.pairs.per.site = parameter.tbl$p.n.pairs.per.site[i.run],
n.crossvalid.tests = 3,
sample.method = parameter.tbl$p.sample.method[i.run],
domain.mask=Aus.domain.mask,
pcs.projargs="+init=epsg:3577",
bandwidth.geowt=parameter.tbl$p.bandwidth.geowt[i.run],
bandwidth.skip=parameter.tbl$p.bandwidth.skip[i.run],
bandwidth.DistFact=parameter.tbl$p.bandwidth.DistFact[i.run],
geowt.RndProp=parameter.tbl$p.geowt.RndProp[i.run],
output.folder = analysis.out.folder,
output.name = parameter.tbl$run.name[i.run])
} # end for i.run
stopCluster(cl)
