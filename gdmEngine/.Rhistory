multiplot(p1, p2, p3, p4, p5, p6, cols=1)
dev.off()#___
png(paste0("//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/SampleMethod_PerformaceSummary.png"),height=1000,width=500)
multiplot(p1, p2, p3, p4, p5, p6, cols=1)
dev.off()#___
summary(results.all)
## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ##
## Reduce the 'all' dataset to 10 reps per site, then plot bandwidth attributes
results.10p <- results.all[(results.all$p.n.pairs.per.site == 10),]
summary(results.10p)
results.10p <- results.10p[(as.character(results.10p$p.sample.method)=="geowt"),]
summary(results.10p)
p1<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Dissimilarity.Evenness, fill=taxa)) +
geom_boxplot() + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Dissimilarity, fill=taxa)) +
geom_boxplot() + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Sitepairs.Geo.Evenness, fill=taxa)) +
geom_boxplot() + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Sitepairs.Env.Evenness, fill=taxa)) +
geom_boxplot() + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Sitepairs.EnvDistance, fill=taxa)) +
geom_boxplot() + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Sitepairs.GeoDistance, fill=taxa)) +
geom_boxplot() + labs(y = "Mdn.Geo.Dist")
png("//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/p_bandwidth_geowt.png",height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
## GEOWT ANALYSIS ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ##
results.10p$p.bandwidth.geowt<-as.factor(results.10p$p.bandwidth.geowt)
p1<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Dissimilarity.Evenness, fill=taxa)) +
geom_boxplot() + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
plot(p1)
## for p.bandwidth.geowt
p1<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Dissimilarity.Evenness, fill=taxa)) +
geom_boxplot() + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Dissimilarity, fill=taxa)) +
geom_boxplot() + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Sitepairs.Geo.Evenness, fill=taxa)) +
geom_boxplot() + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Sitepairs.Env.Evenness, fill=taxa)) +
geom_boxplot() + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Sitepairs.EnvDistance, fill=taxa)) +
geom_boxplot() + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Sitepairs.GeoDistance, fill=taxa)) +
geom_boxplot() + labs(y = "Mdn.Geo.Dist")
png("//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/p_bandwidth_geowt.png",height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Dissimilarity.Evenness)) +
geom_boxplot() +
facet_grid(. ~ taxa)
p1<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Dissimilarity.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Dissimilarity, fill=taxa)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Sitepairs.Geo.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Sitepairs.Env.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Sitepairs.EnvDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Sitepairs.GeoDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Geo.Dist")
png("//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/p_bandwidth_geowt.png",height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
p6<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Sitepairs.GeoDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Geo.Dist") + theme(axis.text.x = element_text(angle=60))
plot(p6)
p1<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Dissimilarity.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Dissimilarity)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Sitepairs.Geo.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Sitepairs.Env.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Sitepairs.EnvDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Sitepairs.GeoDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Geo.Dist") + theme(axis.text.x = element_text(angle=60))
png("//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/p_bandwidth_geowt.png",height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
results.10p$p.bandwidth.skip<-as.factor(results.10p$p.bandwidth.skip)
results.10p$p.bandwidth.DistFact<-as.factor(results.10p$p.bandwidth.DistFact)
results.10p$p.geowt.RndProp<-as.factor(results.10p$p.geowt.RndProp)
## for p.bandwidth.skip
p1<-ggplot(results.10p, aes(x=p.bandwidth.skip, y=Dissimilarity.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(results.10p, aes(x=p.bandwidth.skip, y=Mdn.Dissimilarity)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(results.10p, aes(x=p.bandwidth.skip, y=Sitepairs.Geo.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(results.10p, aes(x=p.bandwidth.skip, y=Sitepairs.Env.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(results.10p, aes(x=p.bandwidth.skip, y=Mdn.Sitepairs.EnvDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(results.10p, aes(x=p.bandwidth.skip, y=Mdn.Sitepairs.GeoDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Geo.Dist") + theme(axis.text.x = element_text(angle=60))
png("//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/p_bandwidth_skip.png",height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
## for p.bandwidth.DistFact
p1<-ggplot(results.10p, aes(x=p.bandwidth.DistFact, y=Dissimilarity.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(results.10p, aes(x=p.bandwidth.DistFact, y=Mdn.Dissimilarity)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(results.10p, aes(x=p.bandwidth.DistFact, y=Sitepairs.Geo.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(results.10p, aes(x=p.bandwidth.DistFact, y=Sitepairs.Env.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(results.10p, aes(x=p.bandwidth.DistFact, y=Mdn.Sitepairs.EnvDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(results.10p, aes(x=p.bandwidth.DistFact, y=Mdn.Sitepairs.GeoDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Geo.Dist") + theme(axis.text.x = element_text(angle=60))
png("//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/p_bandwidth_DistFact.png",height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
## for p.geowt.RndProp
p1<-ggplot(results.10p, aes(x=p.geowt.RndProp, y=Dissimilarity.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(results.10p, aes(x=p.geowt.RndProp, y=Mdn.Dissimilarity)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(results.10p, aes(x=p.geowt.RndProp, y=Sitepairs.Geo.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(results.10p, aes(x=p.geowt.RndProp, y=Sitepairs.Env.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(results.10p, aes(x=p.geowt.RndProp, y=Mdn.Sitepairs.EnvDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(results.10p, aes(x=p.geowt.RndProp, y=Mdn.Sitepairs.GeoDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Geo.Dist") + theme(axis.text.x = element_text(angle=60))
png("//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/p_geowt_RndProp.png",height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ##
## Reduce the 'all' dataset to 10 reps per site, then plot bandwidth attributes
results.10p <- results.all[(results.all$p.n.pairs.per.site == 10),]
results.10p <- results.10p[(as.character(results.10p$p.sample.method)=="geowt"),]
summary(results.10p$p.bandwidth.geowt)
## GEOWT ANALYSIS ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ## -- ##
results.10p$p.bandwidth.geowt<- results.10p$p.bandwidth.geowt/1000
results.10p$p.bandwidth.geowt<-as.factor(results.10p$p.bandwidth.geowt)
results.10p$p.bandwidth.skip<-as.factor(results.10p$p.bandwidth.skip)
results.10p$p.bandwidth.DistFact<-as.factor(results.10p$p.bandwidth.DistFact)
results.10p$p.geowt.RndProp<-as.factor(results.10p$p.geowt.RndProp)
p1<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Dissimilarity.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Dissimilarity)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Sitepairs.Geo.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Sitepairs.Env.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Sitepairs.EnvDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(results.10p, aes(x=p.bandwidth.geowt, y=Mdn.Sitepairs.GeoDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Geo.Dist", x="Bandwidth (km)") + theme(axis.text.x = element_text(angle=60))
png("//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/p_bandwidth_geowt.png",height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
## for p.geowt.RndProp
p1<-ggplot(results.10p, aes(x=p.geowt.RndProp, y=Dissimilarity.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(results.10p, aes(x=p.geowt.RndProp, y=Mdn.Dissimilarity)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(results.10p, aes(x=p.geowt.RndProp, y=Sitepairs.Geo.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(results.10p, aes(x=p.geowt.RndProp, y=Sitepairs.Env.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(results.10p, aes(x=p.geowt.RndProp, y=Mdn.Sitepairs.EnvDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(results.10p, aes(x=p.geowt.RndProp, y=Mdn.Sitepairs.GeoDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Geo.Dist", x="Proportion of random pairs") + theme(axis.text.x = element_text(angle=45))
png("//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/p_geowt_RndProp.png",height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
## for p.bandwidth.skip
p1<-ggplot(results.10p, aes(x=p.bandwidth.skip, y=Dissimilarity.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(results.10p, aes(x=p.bandwidth.skip, y=Mdn.Dissimilarity)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(results.10p, aes(x=p.bandwidth.skip, y=Sitepairs.Geo.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(results.10p, aes(x=p.bandwidth.skip, y=Sitepairs.Env.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(results.10p, aes(x=p.bandwidth.skip, y=Mdn.Sitepairs.EnvDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(results.10p, aes(x=p.bandwidth.skip, y=Mdn.Sitepairs.GeoDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Geo.Dist", x = "Maximum distance of sample point to data cell (multiple of bandwidth)")
png("//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/p_bandwidth_skip.png",height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
## for p.bandwidth.DistFact
p1<-ggplot(results.10p, aes(x=p.bandwidth.DistFact, y=Dissimilarity.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Dissim.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p2<-ggplot(results.10p, aes(x=p.bandwidth.DistFact, y=Mdn.Dissimilarity)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Dissim") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p3<-ggplot(results.10p, aes(x=p.bandwidth.DistFact, y=Sitepairs.Geo.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Geo.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p4<-ggplot(results.10p, aes(x=p.bandwidth.DistFact, y=Sitepairs.Env.Evenness)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Env.Even") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p5<-ggplot(results.10p, aes(x=p.bandwidth.DistFact, y=Mdn.Sitepairs.EnvDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Env.Dist") + theme(axis.text.x=element_blank(), axis.title.x=element_blank())
p6<-ggplot(results.10p, aes(x=p.bandwidth.DistFact, y=Mdn.Sitepairs.GeoDistance)) +
geom_boxplot() + facet_grid(. ~ taxa) + labs(y = "Mdn.Geo.Dist", x = "Distance between sample points (multiple of bandwidth)")
png("//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/p_bandwidth_DistFact.png",height=1000,width=500)
multiplot(p1, p2, p3, p4, p5,p6,cols=1)
dev.off()#___
decay.curve=function(x, a, b, c)
{
y = a + (1-a)/(1+((x/b)^(c)))
return(y)
} # end decay.curve
times.used <- c(0:50)
prob.selected.0.5 <- decay.curve(times.used, 0.05, 0.5, 3)
plot(times.used,prob.selected.0.5)
prob.selected.1 <- decay.curve(times.used, 0.05, 1, 3)
prob.selected.2 <- decay.curve(times.used, 0.05, 2, 3)
prob.selected.3 <- decay.curve(times.used, 0.05, 3, 3)
prob.selected.4 <- decay.curve(times.used, 0.05, 4, 3)
prob.selected.5 <- decay.curve(times.used, 0.05, 5, 3)
plot(times.used,prob.selected.5)
times.used <- c(0:30)
times.used <- c(0:30)
prob.selected.0.5 <- decay.curve(times.used, 0.05, 0.5, 3)
prob.selected.1 <- decay.curve(times.used, 0.05, 1, 3)
prob.selected.2 <- decay.curve(times.used, 0.05, 2, 3)
prob.selected.3 <- decay.curve(times.used, 0.05, 3, 3)
prob.selected.4 <- decay.curve(times.used, 0.05, 4, 3)
prob.selected.5 <- decay.curve(times.used, 0.05, 5, 3)
plot(times.used,prob.selected.5)
times.used <- c(0:20)
prob.selected.0.5 <- decay.curve(times.used, 0.05, 0.5, 3)
prob.selected.1 <- decay.curve(times.used, 0.05, 1, 3)
prob.selected.2 <- decay.curve(times.used, 0.05, 2, 3)
prob.selected.3 <- decay.curve(times.used, 0.05, 3, 3)
prob.selected.4 <- decay.curve(times.used, 0.05, 4, 3)
prob.selected.5 <- decay.curve(times.used, 0.05, 5, 3)
plot(times.used,prob.selected.5)
lines(spline(times.used,prob.selected.5))
plot(times.used,prob.selected.5, type="n")
lines(spline(times.used,prob.selected.5))
lines(spline(times.used,prob.selected.0.5),lty=6)
lines(smooth.spline(times.used,prob.selected.0.5),lty=6)
plot(times.used,prob.selected.5, type="n")
lines(smooth.spline(times.used,prob.selected.0.5),lty=6)
lines(smooth.spline(times.used,prob.selected.5))
plot(times.used,prob.selected.5, type="n")
lines(smooth.spline(times.used,prob.selected.0.5),lty=6)
lines(smooth.spline(times.used,prob.selected.1),lty=5)
lines(smooth.spline(times.used,prob.selected.2),lty=4)
lines(smooth.spline(times.used,prob.selected.3),lty=3)
lines(smooth.spline(times.used,prob.selected.4),lty=2)
lines(smooth.spline(times.used,prob.selected.5),lty=1)
plot(times.used,prob.selected.5, type="n", xlab = "Number of times already selected in a pair", ylab = "Probability of being selected")
lines(smooth.spline(times.used,prob.selected.0.5),lty=6)
lines(smooth.spline(times.used,prob.selected.1),lty=5)
lines(smooth.spline(times.used,prob.selected.2),lty=4)
lines(smooth.spline(times.used,prob.selected.3),lty=3)
lines(smooth.spline(times.used,prob.selected.4),lty=2)
lines(smooth.spline(times.used,prob.selected.5),lty=1)
b.epair.factor
144000/36000
times.used <- c(0:50)
prob.selected.0.5 <- decay.curve(times.used, 0.05, (5*0.5), 3)
prob.selected.1 <- decay.curve(times.used, 0.05, (5*1), 3)
prob.selected.2 <- decay.curve(times.used, 0.05, (5*2), 3)
prob.selected.3 <- decay.curve(times.used, 0.05, (5*3), 3)
prob.selected.4 <- decay.curve(times.used, 0.05, (5*4), 3)
prob.selected.5 <- decay.curve(times.used, 0.05, (5*5), 3)
plot(times.used,prob.selected.5, type="n", xlab = "Number of times already selected in a pair", ylab = "Probability of being selected")
lines(smooth.spline(times.used,prob.selected.0.5),lty=6)
lines(smooth.spline(times.used,prob.selected.1),lty=5)
lines(smooth.spline(times.used,prob.selected.2),lty=4)
lines(smooth.spline(times.used,prob.selected.3),lty=3)
lines(smooth.spline(times.used,prob.selected.4),lty=2)
lines(smooth.spline(times.used,prob.selected.5),lty=1)
plot(times.used,prob.selected.5, type="n", ylim = c(0,1), xlab = "Number of times already selected in a pair", ylab = "Probability of being selected")
lines(smooth.spline(times.used,prob.selected.0.5),lty=6)
lines(smooth.spline(times.used,prob.selected.1),lty=5)
lines(smooth.spline(times.used,prob.selected.2),lty=4)
lines(smooth.spline(times.used,prob.selected.3),lty=3)
lines(smooth.spline(times.used,prob.selected.4),lty=2)
lines(smooth.spline(times.used,prob.selected.5),lty=1)
Selected.records <- read.csv("//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/vascular_plants/selected_gridcell_composition_2018-03-07.csv")
Site.Env.Data <- read.csv("//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/vascular_plants/site_env_data_2018-03-07.csv")
library(raster)
library(gdmEngine)
## ESTABLISH KEY INPUTS ------------------------------------------------------------------##
# Read in a spatial raster specifying the domain and resolution to be modelled
Aus.domain.mask <- raster("//ces-10-cdc/OSM_CDC_GISDATA_work/AUS0025/CLIM/MASK/MASK0.flt")
# Specify Environmental layers
climate.files <- list.files(path = "//lw-osm-02-cdc/OSM_CBR_LW_R51141_GPAA_work/ENV/A/OUT/1990", full.names=TRUE, pattern = ".flt")
terrain.files <- list.files(path = "//lw-osm-02-cdc/OSM_CBR_LW_R51141_GPAA_work/ENV/A/OUT/LAND", full.names=TRUE, pattern = ".flt")
env.files <- c(climate.files, terrain.files)
env.files <- env.files[(substr(env.files, nchar(env.files)-3, nchar(env.files)) == ".flt")] # to remove some arcmap filenames
env.files <- env.files[-c(20,21,32,35,36,38,39,40,43,44,45,46)] # remove grids we don't want to assess in the modelling
env.stk <- stack(env.files)
species.names.file <- "//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/source/biol/vascular_plants/APC_and_Orchid_SpeciesNames.csv"
species.names <- read.csv(species.names.file)
species.names <- as.character(species.names[,1])
species.records.folder <- "//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/source/biol/vascular_plants"
species.records.folder.raw <- "//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/source/biol/vascular_plants/raw_files"
data.processing.folder <- "//osm-23-cdc.it.csiro.au/OSM_CBR_LW_DEE_work/processing/biol/vascular_plants"
agg.cell.rad <- 2.25
min.rich.limit <- 10
max.rich.limit <- 400
min.rich.rad <- 200
min.rich.proportion <- 0.25
n.pairs.model <- 144000 # equates to each site used 10 times
train.proportion <- 0.8
n.pairs.test <- 36000   # equates to each site used 10 times
site.env.data=Site.Env.Data
composition.data=Selected.records
n.pairs.per.site = 10
n.crossvalid.tests = 10
sample.method = 'geowt'
domain.mask=Aus.domain.mask
pcs.projargs="+init=epsg:3577"
bandwidth.geowt=150000
bandwidth.skip=2
bandwidth.DistFact=1
geowt.RndProp=0.05
bandwidth=150000
b.skip=3
inter.sample.pt.b.factor=1
prop.sites.background=0.1
is.null(pcs.projargs)
# Find the extent of the domain, in projected coordinates
pcs.domain.ext <- raster::projectExtent(domain.mask,
crs=sp::CRS(pcs.projargs))
# if bandwidth isn't specified, set it at 5% of the grid x-axis extent
if(is.null(bandwidth))
{bandwidth <- ((pcs.domain.ext@extent@xmax - pcs.domain.ext@extent@xmin)/20)}
# start of the geographic sample net
start.x <- pcs.domain.ext@extent@xmin + runif(1,0,(bandwidth/2))
start.y <- pcs.domain.ext@extent@ymin + runif(1,0,(bandwidth/2))
## The number of x's & y's [square net]
# n.x <- ceiling((pcs.domain.ext@extent@xmax - pcs.domain.ext@extent@xmin) / (inter.sample.pt.b.factor*bandwidth))
# n.y <- ceiling((pcs.domain.ext@extent@ymax - pcs.domain.ext@extent@ymin) / (inter.sample.pt.b.factor*bandwidth))
# The number of x's & y's [hexagonal net]
n.x1 <- ceiling((pcs.domain.ext@extent@xmax - start.x) / (inter.sample.pt.b.factor*bandwidth))
n.x2 <- ceiling((pcs.domain.ext@extent@xmax - (start.x + ((inter.sample.pt.b.factor*bandwidth)/2))) / (inter.sample.pt.b.factor*bandwidth))
y.interval <- sqrt(((inter.sample.pt.b.factor*bandwidth)^2)-(((inter.sample.pt.b.factor*bandwidth)/2)^2))
n.y <- ceiling((pcs.domain.ext@extent@ymax - start.y) / y.interval)
sample.pts.1 <- expand.grid(x.pos = seq(from=start.x, by=(inter.sample.pt.b.factor*bandwidth), length.out = n.x1),
y.pos = seq(from=start.y, by=(y.interval*2), length.out = ceiling(n.y/2)))
sample.pts.2 <- expand.grid(x.pos = seq(from=(start.x + ((inter.sample.pt.b.factor*bandwidth)/2)), by=(inter.sample.pt.b.factor*bandwidth), length.out = n.x2),
y.pos = seq(from=(start.y + y.interval), by=(y.interval*2), length.out = floor(n.y/2)))
sample.pts <- rbind(sample.pts.1,sample.pts.2)
Aus.Alb <- raster("\\osm-23-cdc\OSM_CBR_LW_DEE_work\source\env\DOMAIN\MASK_Albers.flt")
Aus.Alb <- raster("//osm-23-cdc/OSM_CBR_LW_DEE_work/source/env/DOMAIN/MASK_Albers.flt")
plot(Aus.Alb)
points(sample.pts)
plot(Aus.Alb)
points(sample.pts, pch=20)
7204/4
library(gdmEngine)
library(ALA4R)
library(raster)
# LAND SNAIL INPUTS
species.names.file <- "//osm-23-cdc/OSM_CBR_LW_DEE_work/source/biol/land_snails/AusLandSnails_ALASpeciesList_9Mar18.csv"
species.names <- read.csv(species.names.file)
species.names <- species.names$Species.Name
species.names <- unique(species.names)
species.records.folder <- "//osm-23-cdc/OSM_CBR_LW_DEE_work/source/biol/land_snails"
species.records.folder.raw <- "//osm-23-cdc/OSM_CBR_LW_DEE_work/source/biol/land_snails/raw_files"
data.processing.folder <- "//osm-23-cdc/OSM_CBR_LW_DEE_work/processing/biol/land_snails"
agg.cell.rad <- 2.25
min.rich.limit <- 2
max.rich.limit <- 50
min.rich.rad <- 50
min.rich.proportion <- 0.25
n.pairs.model <- 14000 # equates to each site used 10 times
train.proportion <- 0.8
n.pairs.test <- 3500   # equates to each site used 10 times
# Load a model
load(file.path(data.processing.folder,"Final_GDM","gdm_build_FinMod_land_snails_2018-06-12.Rdata"))
final.gdm <- GDM_Final_Model$Mean.Final.GDM
# Read in a spatial raster specifying the domain and resolution to be modelled
Aus.domain.mask <- raster("//ces-10-cdc/OSM_CDC_GISDATA_work/AUS0025/CLIM/MASK/MASK0.flt")
# SPECIFY ALA DATA FILTERING THRESHOLDS
data.start.year = 1970
location.uncertainty.limit = 2000
# Specify Environmental layers
climate.files <- list.files(path = "//lw-osm-02-cdc/OSM_CBR_LW_R51141_GPAA_work/ENV/A/OUT/1990", full.names=TRUE, pattern = ".flt")
terrain.files <- list.files(path = "//lw-osm-02-cdc/OSM_CBR_LW_R51141_GPAA_work/ENV/A/OUT/LAND", full.names=TRUE, pattern = ".flt")
#soil.files <- list.files(path = "//lw-osm-02-cdc/OSM_CBR_LW_HCAS_work/HCAS2.0/HCAS2.0a/ENV/SOIL/TOP", full.names=TRUE, pattern = ".flt")
soil.files <- list.files(path = "//osm-23-cdc/OSM_CBR_LW_DEE_work/source/env/SOIL/TOP", full.names=TRUE, pattern = ".flt")
env.files <- c(climate.files, terrain.files, soil.files)
env.files <- env.files[(substr(env.files, nchar(env.files)-3, nchar(env.files)) == ".flt")] # to remove some arcmap filenames
env.files <- env.files[-c(3,11,12,26,29,30,31,32,33,34,37,38,39,40)] # remove grids we don't want to assess in the modelling
env.stk <- stack(env.files, quick=TRUE) #env.stk <- stack(env.files)
gdm.model=final.gdm
env.grids.stk=env.stk
extrap.method = 'Conservative'
output.folder = file.path(data.processing.folder,"Final_GDM")
output.name = "tran"
verbose=TRUE
if(!class(env.grids.stk) == "RasterStack")
{stop("A raster stack is required for 'env.grids.stk'") }
!file.exists(output.folder)
!class(env.grids.stk) == "RasterStack"
## Get the number of env predictors in the GDM
npreds <- length(gdm.model$predictors)
gdm.model$geo
if(gdm.model$geo){
geo.in <- as.integer(1)
npreds <- length(gdm.model$predictors)-1
pred.names <- gdm.model$predictors[-1]
trans.files <- character(length = (npreds+2))
}else{
geo.in <- as.integer(0)
npreds <- length(gdm.model$predictors)
pred.names <- gdm.model$predictors
trans.files <- character(length = npreds)
} # end if gdm.model$geo
geo.in
npreds
gdm.model$predictors
pred.names <- gdm.model$predictors[-1]
pred.names
trans.files
## Get the filepaths for the predictors and the trans grids
env.files <- character(length = npreds)
for(i.prd in 1:npreds)
{
layer.index <- which(names(env.grids.stk) == pred.names[i.prd])
if(length(layer.index)>0){
env.files[i.prd] <- env.grids.stk@layers[[layer.index]]@file@name
if(substr(env.files[i.prd], nchar(env.files[i.prd])-3, nchar(env.files[i.prd])) != ".flt")
{stop("env grids need to be in .flt format")}
if(!file.exists(env.files[i.prd]))
{stop(paste0("Cannot find the .flt file for ",pred.names[i.prd]))}
trans.files[i.prd] <- file.path(output.folder, paste0(pred.names[i.prd], "_", output.name, ".flt") )
}else{
stop(paste0("Raster layer for ",pred.names[i.prd], "not found in env.grids.stk"))
}
}#end for i.prd
trans.files
gdm.model$geo
npreds
if(gdm.model$geo)
{
trans.files[(npreds+1)] <- file.path(output.folder, paste0("GeoX_", output.name, ".flt") )
trans.files[(npreds+2)] <- file.path(output.folder, paste0("GeoY_", output.name, ".flt") )
}
trans.files
extrap.code <- 1 # assume the default ("Conservative"), even if misspecified
if(extrap.method == "End10")
{extrap.code <- 2}
if(extrap.method == "WholeGrad")
{extrap.code <- 3}
if(extrap.method == "Clamped")
{extrap.code <- 0}
extrap.code <- as.integer(extrap.code)
n.splines.total <- as.integer(sum(gdm.model$splines))
grid.rows <- as.integer(nrow(env.grids.stk))
grid.cols <- as.integer(ncol(env.grids.stk))
npreds <- as.integer(npreds)
vec.splines <- as.integer(gdm.model$splines)
vec.knots <- gdm.model$knots
vec.coeffs <- gdm.model$coefficients
n.splines.total
grid.rows
grid.cols
npreds
vec.splines
vec.knots
vec.coeffs
out.val <- 1
n.splines.total
library(devtools)
library(roxygen2)
library(Rcpp)
pkg_root = '//ces-10-cdc/OSM_CDC_MMRG_work/users/bitbucket/gdm_workflow/gdmEngine'
DESCRIPTION = c('Package: gdmEngine',
'Version: 0.01',
paste('Date:', Sys.Date()),
'Title: Workflow for GDM',
'Description: Functions used to develop GDMs',
paste('Author:', unname(Sys.info()['user'])),
'Maintainer: Chris Ware <chris.ware@csiro.au>',
'SystemRequirements: git with shell distribution',
'Licence: errr',
#paste('Authors@R:', unname(Sys.info()['user']))
'Imports:
assertthat,
DescTools,
gdm,
magrittr,
nnls,
matrixStats,
parallel,
plyr,
raster,
Rcpp,
sp,
spatstat,' #,
#'LinkingTo: Rcpp'
)
sink(paste(pkg_root, 'DESCRIPTION', sep = '/'))
cat(DESCRIPTION, sep = '\n')
sink()
## Build with devtools
setwd(pkg_root)
document()
build()
document()
install(quick = TRUE)
uninstall("spatstat")
